<template>
	<scroll-view class="bg-white">
		<tableNoEditEgA
			v-for="(tableItem, index) in tableList"
			:key="index"
			:rowsBeforeTitle="tableItem.rowsBeforeTitle"
			:title="tableItem.title" 
			:rowsAfterTitle="tableItem.rowsAfterTitle" 
		></tableNoEditEgA>
	</scroll-view>
</template>

<script>
	import tableNoEditEgA from "@/pages/components/tableNoEditEgA";
	import TableEgAElem from "@/pages/components/tableEgAElem";
	import Url from "@/pages/components/network/request/url";
	
	export default {
		name: 'pdMakeFlow',
		components: {
			tableNoEditEgA
		},
		props: {
			itemData: {
				required: true
			}
		},
		watch: {
			itemData: {
				handler: function (val, oldVal) {
					if (val !== null && val !== undefined) {
						this.flushData(val);
					}
				}
			}
		},
		data() {
			return {
				tableList: [],
				mode: [{
					id: 'mtkModeWelding',
					title: '焊接作业信息',
					idPrefix: 'mtkWelding',
					'itemTitles': {'Date':'焊接作业时间', 'Content': '作业环境温度', 'User': '作业人员', 'Att': '焊接作业照片'},
					checkPrefix: 'mtk',
					type: 'makeTaskInfo'
				}, {
					id: 'mtkModeAnti',
					title: '防腐作业信息',
					idPrefix: 'mtkAnti',
					'itemTitles': {'Date':'防腐作业时间', 'Content': '防腐作业内容', 'User': '作业人员', 'Att': '防腐作业照片'},
					checkPrefix: 'mtk',
					type: 'makeTaskInfo'
				}, {
					id: 'mtkModeTask',
					title: '加工作业信息',
					idPrefix: 'mtkTask',
					'itemTitles': {'Date':'加工作业时间', 'Content': '加工作业内容', 'User': '作业人员', 'Att': '加工作业照片'},
					checkPrefix: 'mtk',
					type: 'makeTaskInfo'
				}, {
					id: 'mckModeWelding',
					title: '焊缝检验信息',
					idPrefix: 'mckWelding',
					'itemTitles': {'Date':'焊缝检验时间', 'Content': '焊缝检验结论', 'User': '检验人员', 'Att': '焊缝检验照片'},
					checkPrefix: 'mck',
					type: 'makeCheckInfo'
				}, {
					id: 'mckModeProduct',
					title: '成品检验信息',
					idPrefix: 'mckProduct',
					'itemTitles': {'Date':'成品检验时间', 'Content': '成品检验结论', 'User': '检验人员', 'Att': '成品检验照片'},
					checkPrefix: 'mck',
					type: 'makeCheckInfo'
				}, {
					id: 'mckModeSupervision',
					title: '监造检验信息',
					idPrefix: 'mckSupervision',
					'itemTitles': {'Date':'监造检验时间', 'Content': '监造检验结论', 'User': '监理工程师', 'Att': '监造检验照片'},
					checkPrefix: 'mck',
					type: 'makeCheckInfo'
				}]
			}
		},
		methods: {
			/**
			 * @description 创造数据
			 */
			// createData: function() {
			// 	// 例子1
			// 	this.tableList.push({
			// 		rowsBeforeTitle: [],
			// 		title: {color: '#5c9ed6', value: '焊接作业信息'},
			// 		rowsAfterTitle: [
			// 			new TableEgAElem('作业时间', '', '25%', '75%', '#dad8d8', 'white'),
			// 			new TableEgAElem('作业人员', '', '25%', '75%', '#dad8d8', 'white'),
			// 			new TableEgAElem('作业内容', '', '25%', '75%', '#dad8d8', 'white'),
			// 			new TableEgAElem('作业图片', '', '25%', '75%', '#dad8d8', 'white')
			// 		]
			// 	});
			// }
			flushData: function(data) {
				this.tableList.splice(0, this.tableList.length);
				if (data.productCategory !== null && data.productCategory !== undefined) {
					if (data.productMade !== null && data.productMade !== undefined) {
						this.mode.forEach(item => {
							if (data.productCategory[item.id] != 0 && data.productCategory[item.type] != 0) {
								// 生成行数据
								let rowsAfterTitle = [];
								let rawData = {};
								if (data.productCategory[item.checkPrefix + 'Date'] != 0) {  // 时间
									rowsAfterTitle.push(new TableEgAElem(item.itemTitles.Date, data.productMade[item.idPrefix + 'Date'], '30%', '70%', '#f2f2f2', 'white'));
									rawData[item.idPrefix + 'Date'] = data.productMade[item.idPrefix + 'Date'];
								}
								if (data.productCategory[item.checkPrefix + 'Content'] != 0) {  // 内容
									rowsAfterTitle.push(new TableEgAElem(item.itemTitles.Content, data.productMade[item.idPrefix + 'Content'], '30%', '70%', '#f2f2f2', 'white'));
									rawData[item.idPrefix + 'Content'] = data.productMade[item.idPrefix + 'Content'];
								}
								if (data.productCategory[item.checkPrefix + 'User'] != 0) {  // 人员
									rowsAfterTitle.push(new TableEgAElem(item.itemTitles.User, data.productMade[item.idPrefix + 'WorkerName'], '30%', '70%', '#f2f2f2', 'white'));
									rawData[item.idPrefix + 'WorkerName'] = data.productMade[item.idPrefix + 'WorkerName'];
									rawData[item.idPrefix + 'WorkerId'] = data.productMade[item.idPrefix + 'WorkerId'];
								}
								if (data.productCategory[item.checkPrefix + 'Att'] != 0) {  // 图片
									rowsAfterTitle.push(new TableEgAElem(item.itemTitles.Att, (
										data.productMade[item.idPrefix + 'Att'] == null || data.productMade[item.idPrefix + 'Att'] == ''? 
										'': 
										Url.resBaseUrl + data.productMade[item.idPrefix + 'Att']
									), '30%', '70%', '#f2f2f2', 'white', 'image'));
									rawData[item.idPrefix + 'Att'] = data.productMade[item.idPrefix + 'Att'];
								}
								this.tableList.push({
									'rowsBeforeTitle': [],
									'title': {color: '#5c9ed6', value: item.title},
									'rowsAfterTitle': rowsAfterTitle,
									'rawData': rawData
								});
							}
						});
					}
				}
			}
			
		},
		mounted: function(){
			if (this.itemData !== null && this.itemData !== undefined) {
				this.flushData(this.itemData);
			}
		}
	}
</script>

<style>
	.col-auto-line {
		word-wrap:break-word;
		word-break:normal;
	}
	* {
		font-size: 25rpx !important;
	}
</style>
